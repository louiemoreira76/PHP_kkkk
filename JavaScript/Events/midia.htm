<body>
    <style>
        .controls {
            display: flex;
            flex-direction: row;
            gap: 10px; 
        }
        .container {
            display: flex;
            flex-direction: column;
            justify-content: center; 
            align-items: center; 
            height: 100vh; 
        }
    </style>

    <div class="container">
        <video id="video" width="620" height="440" controls>
            <source src="../../../Videos/2024-08-31 21-14-18.mp4" type="video/mp4">
        </video>
        <div class="controls">
            <button id="play">Play</button>
            <button id="pause">Pause</button>
            <button id="stop" onclick="notion()">Stop</button>
        </div>
    </div>
    <script>
        const video = document.querySelector('#video');
        const playButton = document.querySelector('#play');
        const pauseButton = document.querySelector('#pause');
        const stopButton = document.querySelector('#stop');

        // Quando o v√≠deo come√ßar a tocar, dispara o evento
        video.addEventListener('play', () => {
            console.log('Play no v√≠deo');
        });

        // Ao clicar no bot√£o play, inicia o v√≠deo
        playButton.addEventListener('click', () => {
            video.play();
        });

        // Quando o v√≠deo for pausado, dispara o evento
        video.addEventListener('pause', () => {
            console.log('Pausado');
        });

        // Ao clicar no bot√£o pause, pausa o v√≠deo
        pauseButton.addEventListener('click', () => {
            video.pause();
        });

        // Quando o v√≠deo chegar ao fim, dispara o evento
        video.addEventListener('ended', () => {
            console.log('A reprodu√ß√£o chegou ao fim');
        });

        // Ao clicar no bot√£o stop, pausa o v√≠deo e retorna ao in√≠cio
        stopButton.addEventListener('click', () => {
            video.pause(); // Pausa o v√≠deo
            video.currentTime = 0; // Retorna o tempo para o in√≠cio
        });

        // Fun√ß√£o personalizada que exibe uma mensagem quando o v√≠deo √© parado
        function notion() {
    // Verifica se a mensagem j√° est√° na tela para evitar duplicidade
    if (!document.querySelector('.video-message')) {
        const message = document.querySelector('body'); // Seleciona o body
        const msg = document.createElement('h3'); // Cria um novo elemento <h3>
        msg.classList.add('video-message'); // Adiciona uma classe para identifica√ß√£o
        msg.innerHTML = 'V√≠deo acabou üê±‚Äçüèç'; // Mensagem exibida
        message.appendChild(msg); // Anexa a mensagem ao body

        // Remove a mensagem ap√≥s 5 segundos
        setTimeout(() => {
            msg.remove(); // Remove o elemento <h3>
        }, 5000);
    }
}

        // Eventos adicionais dispon√≠veis (n√£o utilizados)
        // 'timeupdate', 'seeking', 'seeked', 'volumechange'
    </script>
</body>
